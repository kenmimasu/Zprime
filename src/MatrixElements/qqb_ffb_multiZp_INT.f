      REAL*8 FUNCTION 
     &SQQB_FFB_MULTI_INT(L3,L4,IQ,JF,P1,P2,P3,P4,
     &         MASSF,ZZMASS,ZZWIDTH,CONT,EW,BSM,BB_INIT)

C
C FUNCTION GENERATED BY MADGRAPH
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P1,P2,P3,P4,...
C
C FOR PROCESS : q q~  -> f f~ (where f is SM fermion)
C JF = 
c CONT = 0: ALL; 1: INTERFERENCE only; 2: SQUARES ONLY
c EW: include Z and photon 1=YES 0=NO
c BSM: include Z's 1=YES 0=NO
c BB_INIT: Switch for bb initial state taking mass into account
      
      IMPLICIT NONE
C
C CONSTANTS
C
      INTEGER    NEXTERNAL,   NCOMB
      PARAMETER (NEXTERNAL=4, NCOMB= 16)
C
C ARGUMENTS
C
      REAL*8 P1(0:3),P2(0:3),P3(0:3),P4(0:3)
      INTEGER*4 L3,L4,IQ,JF,EW,BSM,BB_INIT
      REAL*8 MASSF,ZZMASS(10),ZZWIDTH(10)
      INTEGER CONT
C
C LOCAL VARIABLES
C
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T
      REAL*8 QQB_FFB_MULTI_INT
      INTEGER IHEL
      LOGICAL GOODHEL(NCOMB)
      DATA GOODHEL/NCOMB*.FALSE./
      DATA NTRY/0/
      DATA (NHEL(IHEL,  1),IHEL=1,4) / -1, -1, -1, -1/
      DATA (NHEL(IHEL,  2),IHEL=1,4) / -1, -1, -1,  1/
      DATA (NHEL(IHEL,  3),IHEL=1,4) / -1, -1,  1, -1/
      DATA (NHEL(IHEL,  4),IHEL=1,4) / -1, -1,  1,  1/
      DATA (NHEL(IHEL,  5),IHEL=1,4) / -1,  1, -1, -1/
      DATA (NHEL(IHEL,  6),IHEL=1,4) / -1,  1, -1,  1/
      DATA (NHEL(IHEL,  7),IHEL=1,4) / -1,  1,  1, -1/
      DATA (NHEL(IHEL,  8),IHEL=1,4) / -1,  1,  1,  1/
      DATA (NHEL(IHEL,  9),IHEL=1,4) /  1, -1, -1, -1/
      DATA (NHEL(IHEL, 10),IHEL=1,4) /  1, -1, -1,  1/
      DATA (NHEL(IHEL, 11),IHEL=1,4) /  1, -1,  1, -1/
      DATA (NHEL(IHEL, 12),IHEL=1,4) /  1, -1,  1,  1/
      DATA (NHEL(IHEL, 13),IHEL=1,4) /  1,  1, -1, -1/
      DATA (NHEL(IHEL, 14),IHEL=1,4) /  1,  1, -1,  1/
      DATA (NHEL(IHEL, 15),IHEL=1,4) /  1,  1,  1, -1/
      DATA (NHEL(IHEL, 16),IHEL=1,4) /  1,  1,  1,  1/
C ----------
C BEGIN CODE
C ----------
      SQQB_FFB_MULTI_INT = 0d0
      NTRY=NTRY+1
      DO IHEL=1,NCOMB
      T=QQB_FFB_MULTI_INT(L3,L4,IQ,JF,P1,P2,P3,P4,
     &    MASSF,ZZMASS,ZZWIDTH,NHEL(1,IHEL),CONT,EW,BSM,BB_INIT)
             SQQB_FFB_MULTI_INT = SQQB_FFB_MULTI_INT + T
      ENDDO
      SQQB_FFB_MULTI_INT = SQQB_FFB_MULTI_INT /  4D0
      END
       
      REAL*8 FUNCTION
     &QQB_FFB_MULTI_INT(L3,L4,IQ,JF,P1,P2,P3,P4,
     &        MASSF,ZZMASS,ZZWIDTH,NHEL,CONT,EW,BSM,BB_INIT)
C
C FUNCTION GENERATED BY MADGRAPH
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT IN PHASE SPACE P1,P2,P3,P4,...
C AND HELICITY NHEL(1),NHEL(2),....
C
C FOR PROCESS : q q~  -> f f~ (where f is SM fermion)
C
      IMPLICIT NONE
C
C CONSTANTS
C
      INTEGER    NGRAPHS,    NEIGEN,    NEXTERNAL
      PARAMETER (NGRAPHS=  12,NEIGEN=  1,NEXTERNAL=4)
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C
C ARGUMENTS
C
      REAL*8 P1(0:3),P2(0:3),P3(0:3),P4(0:3)
      INTEGER*4 L3,L4,IQ,JF,NHEL(NEXTERNAL),EW,BSM,BB_INIT
      REAL*8 MASSF,ZZMASS(10),ZZWIDTH(10)
      INTEGER CONT
C
C LOCAL VARIABLES
C
      INTEGER I,J
      REAL*8 EIGEN_VAL(NEIGEN), EIGEN_VEC(NGRAPHS,NEIGEN)
      COMPLEX*16 ZTEMP
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W1(6)  , W2(6)  , W3(6)  , W4(6)  , W5(6)
      COMPLEX*16 W6(6)  , W7(6)
      REAL*8 QQB_FFB_TEMP,MASSI
      REAL*8 GAQ(2),GZQ(2),GAF(2),GZF(2)
      REAL*8 GZZQ(2,10),GZZF(2,10)
      REAL*8 TEMPQ(2),TEMPF(2),TEMPM,TEMPW
C COMMONS
      include 'ewparams.inc'
      include 'ewcoups.inc'
C Z' COUPLINGS
      include 'LRcoups.inc'
      include 'zpparams.inc'
C
C COLOR DATA
C
      DATA EIGEN_VAL(1  )/       6.6666666666666674D-01 /
      DATA EIGEN_VEC(1  ,1  )/   7.0710678118654746D-01 /
      DATA EIGEN_VEC(2  ,1  )/   7.0710678118654746D-01 /
      DATA EIGEN_VEC(3  ,1  )/   7.0710678118654746D-01 /
      DATA EIGEN_VEC(4  ,1  )/   7.0710678118654746D-01 /
      DATA EIGEN_VEC(5  ,1  )/   7.0710678118654746D-01 /
      DATA EIGEN_VEC(6  ,1  )/   7.0710678118654746D-01 /
      DATA EIGEN_VEC(7  ,1  )/   7.0710678118654746D-01 /
      DATA EIGEN_VEC(8  ,1  )/   7.0710678118654746D-01 /
      DATA EIGEN_VEC(9  ,1  )/   7.0710678118654746D-01 /
      DATA EIGEN_VEC(10 ,1  )/   7.0710678118654746D-01 /
      DATA EIGEN_VEC(11 ,1  )/   7.0710678118654746D-01 /
      DATA EIGEN_VEC(12 ,1  )/   7.0710678118654746D-01 /
C ----------
C BEGIN CODE
C ----------
C RESET.
      DO J=1,NGRAPHS
      AMP(J)=0.D0
      END DO
C HELICITIES.
      IF(NHEL(3).NE.L3)GOTO 999
      IF(NHEL(4).NE.L4)GOTO 999
C PHOTON,Z COUPLINGS (LEFT/- IS ARRAY 1; RIGHT/+ IS ARRAY 2).
      IF(IQ.EQ.1)THEN
C D-QUARK.
        DO I=1,2
          GAQ(I)=GAD(I)
          GZQ(I)=GZD(I)*DgZd(I)
          DO J=1,10
            GZZQ(I,J)=GZZD(I,J)
          END DO
        END DO
      ELSE IF(IQ.EQ.2)THEN
C U-QUARK.
        DO I=1,2
          GAQ(I)=GAU(I)
          GZQ(I)=GZU(I)*DgZu(I)
          DO J=1,10
            GZZQ(I,J)=GZZU(I,J)
          END DO
        END DO
      ELSE IF(IQ.EQ.3)THEN
C S-QUARK.
        DO I=1,2
          GAQ(I)=GAD(I)
          GZQ(I)=GZD(I)*DgZd(I)
          DO J=1,10
            GZZQ(I,J)=GZZS(I,J)
          END DO
        END DO
      ELSE IF(IQ.EQ.4)THEN
C C-QUARK.
        DO I=1,2
          GAQ(I)=GAU(I)
          GZQ(I)=GZU(I)*DgZu(I)
          DO J=1,10
            GZZQ(I,J)=GZZC(I,J)
          END DO
        END DO
      ELSE IF(IQ.EQ.5)THEN
C B-QUARK.
        DO I=1,2
          GAQ(I)=GAD(I)
          GZQ(I)=GZD(I)*DgZb(I)
          DO J=1,10
            GZZQ(I,J)=GZZB(I,J)
          END DO
        END DO
      END IF
      IF(JF.EQ.1)THEN
C D-QUARK.
        DO I=1,2
          GAF(I)=GAD(I)
          GZF(I)=GZD(I)*DgZd(I)
          DO J=1,10
            GZZF(I,J)=GZZD(I,J)
          END DO
        END DO
      ELSE IF(JF.EQ.2)THEN
C U-QUARK.
        DO I=1,2
          GAF(I)=GAU(I)
          GZF(I)=GZU(I)*DgZd(I)
          DO J=1,10
            GZZF(I,J)=GZZU(I,J)
          END DO
        END DO
      ELSE IF(JF.EQ.3)THEN
C LEPTON.
        DO I=1,2
          GAF(I)=GAL(I)
          GZF(I)=GZL(I)*DgZe(I)
          DO J=1,10
            GZZF(I,J)=GZZE(I,J)
          END DO
        END DO
      ELSE IF(JF.EQ.4)THEN
C NEUTRINO.
        DO I=1,2
          GAF(I)=0.D0
          GZF(I)=GZN(I)*DgZn(I)
          DO J=1,10
            GZZF(I,J)=GZZN(I,J)
          END DO
        END DO
      ELSE IF(JF.EQ.5)THEN
C BOTTOM (corrected).
        DO I=1,2
          GAF(I)=GAD(I)
          GZF(I)=GZD(I)*DgZb(I)
          DO J=1,10
            GZZF(I,J)=GZZB(I,J)
          END DO
        END DO
      ELSE IF(JF.EQ.6)THEN
C TOP (corrected).
        DO I=1,2
          GAF(I)=GAU(I)
          GZF(I)=GZU(I)*DgZt(I)
          DO J=1,10
            GZZF(I,J)=GZZT(I,J)
          END DO
        END DO
      ELSE IF(JF.EQ.7)THEN
C TAU (corrected).
      DO I=1,2
        GAF(I)=GAL(I)
        GZF(I)=GZL(I)*DgZta(I)
        DO J=1,10
          GZZF(I,J)=GZZTA(I,J)
        END DO
      END DO
C TAU NEUTRINO (corrected).
      DO I=1,2
        GAF(I)=0d0
        GZF(I)=GZN(I)*DgZnt(I)
        DO J=1,10
          GZZF(I,J)=GZZNT(I,J)
        END DO
      END DO
      END IF
C set inital state mass:
      if(BB_INIT.eq.1)then
            MASSI=RMB
      else
            MASSI=ZERO
      endif
C Z' COUPLINGS ARE GIVEN ON INPUT: GZZQ, GZZF.
C WAVEFUNCTIONS.
      CALL IXXXXX(P1  ,MASSI, NHEL(1  ), 1,W1  )
      CALL OXXXXX(P2  ,MASSI, NHEL(2  ),-1,W2  )
      CALL IXXXXX(P3  ,MASSF,NHEL(3  ),-1,W3  )
      CALL OXXXXX(P4  ,MASSF,NHEL(4  ), 1,W4  )
      IF(EW.eq.1)then
C PHOTON DIAGRAM.
      CALL JIOXXX(W1  ,W2  ,GAQ,AMASS,AWIDTH,W5  )
      CALL IOVXXX(W3  ,W4  ,W5  ,GAF,AMP(1  ))
C Z DIAGRAM.
      CALL JIOXXX(W1  ,W2  ,GZQ,ZMASS,ZWIDTH,W6  )
      CALL IOVXXX(W3  ,W4  ,W6  ,GZF,AMP(2  ))
      ENDIF
      IF(BSM.eq.1)then
C Z' DIAGRAMS.
      DO I=1,10
        DO J=1,2
          TEMPQ(J)=GZZQ(J,I)
          TEMPF(J)=GZZF(J,I)
        END DO
        TEMPM=ZZMASS(I)
        TEMPW=ZZWIDTH(I)
        IF(TEMPM.EQ.0.d0) GOTO 888
        CALL JIOXXX(W1  ,W2  ,TEMPQ,TEMPM,TEMPW,W7  )
        CALL IOVXXX(W3  ,W4  ,W7  ,TEMPF,AMP(2+I))
 888  CONTINUE
      END DO
      ENDIF
 999  CONTINUE
C TOTAL M2.
      QQB_FFB_MULTI_INT = 0.D0
      DO I = 1, NEIGEN
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NGRAPHS
              ZTEMP = ZTEMP + EIGEN_VEC(J,I)*AMP(J)
          ENDDO
          QQB_FFB_MULTI_INT =QQB_FFB_MULTI_INT
     &                              +ZTEMP*EIGEN_VAL(I)*CONJG(ZTEMP)
cccccccccccccccccccccccccccccccccccccc
      IF(CONT.ne.0)then ! SELECT INTERFERENCE OR SQUARED TERMS
          QQB_FFB_TEMP=QQB_FFB_MULTI_INT
          DO J = 1, NGRAPHS
              ZTEMP =  EIGEN_VEC(J,I)*AMP(J)
c SUBTRACT SQUARED PARTS FOR INTERFERENCE ONLY
              QQB_FFB_MULTI_INT=QQB_FFB_MULTI_INT -
     &                              ZTEMP*EIGEN_VAL(I)*CONJG(ZTEMP)
          ENDDO
c NO INTERFERENCE
c SUBTRACT INTERFERENCE ONLY FROM TOTAL
          IF(CONT.eq.2)then
            QQB_FFB_MULTI_INT=QQB_FFB_TEMP-QQB_FFB_MULTI_INT
          ENDIF
      ENDIF
ccccccccccccccccccccccccccccccccccccccc
      ENDDO
C ADDITIONAL COLOR FOR QUARKS.
      IF((JF.LE.2).OR.(JF.GE.5))QQB_FFB_MULTI_INT=QQB_FFB_MULTI_INT*3.D0
C      CALL GAUGECHECK(AMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NGRAPHS,NEIGEN)
      END
